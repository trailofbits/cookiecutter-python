[project]
name = "{{ cookiecutter.project_slug }}"
dynamic = ["version"]
description = "{{ cookiecutter.project_description }}"
readme = "README.md"
license-files = ["LICENSE"]

{%- if cookiecutter.license == "Apache 2.0" %}
license = "Apache-2.0"
{%- elif cookiecutter.license == "AGPL v3" %}
license = "AGPL-3.0-or-later"
{%- elif cookiecutter.license == "Proprietary" %}
license = "LicenseRef-Proprietary-License"
{%- endif %}

authors = [
    { name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}" },
]
classifiers = [
    "Programming Language :: Python :: 3",
]
dependencies = [
    {%- if cookiecutter.data_library == "polars" %}
    "polars >= 0.20.0",
    {%- elif cookiecutter.data_library == "pandas" %}
    "pandas >= 2.0.0",
    {%- endif %}
]
requires-python = ">=3.11"

[tool.setuptools.dynamic]
version = { attr = "{{ cookiecutter.__project_import }}.__version__" }

[project.optional-dependencies]
doc = [
    {%- if cookiecutter.documentation == "pdoc" -%}
    "pdoc"
    {%- endif -%}
]
test = ["pytest", "pytest-cov", "pretend", "coverage[toml]"]
lint = [
    # NOTE: ruff is under active development, so we pin conservatively here
    # and let Dependabot periodically perform this update.
    "ruff ~= 0.6.2",
    "ty >= 0.1.0",
    "types-html5lib",
    "types-requests",
    "types-toml",
    {%- if cookiecutter.docstring_coverage %}
    "interrogate",
    {%- endif %}
]
dev = ["{{ cookiecutter.project_slug }}[doc,test,lint]", "twine", "build", "pre-commit"]

{% if cookiecutter.entry_point -%}
[project.scripts]
"{{ cookiecutter.entry_point }}" = "{{ cookiecutter.__project_import }}._cli:main"
{%- endif %}

[project.urls]
Homepage = "https://pypi.org/project/{{ cookiecutter.project_slug }}"
Documentation = "https://{{ cookiecutter.github_username }}.github.io/{{ cookiecutter.project_slug }}/"
Issues = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}/issues"
Source = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"

[tool.coverage.run]
# don't attempt code coverage for the CLI entrypoints
omit = ["{{ cookiecutter.__project_src_path }}/_cli.py"]

[tool.ty]
# Astral's experimental type checker
search_path = ["src"]
strict = true

# Ruff configuration is in ruff.toml

{%- if cookiecutter.docstring_coverage %}
[tool.interrogate]
# don't enforce documentation coverage for packaging, testing, the virtual
# environment, or the CLI (which is documented separately).
exclude = ["env", "test", "{{ cookiecutter.__project_src_path }}/_cli.py"]
ignore-semiprivate = true
fail-under = 100
{%- endif %}

[tool.pytest.ini_options]
# Support tests living beside code
testpaths = ["src", "test"]
python_files = ["test_*.py", "*_test.py"]
# Show test durations
addopts = "-q --durations=10"
